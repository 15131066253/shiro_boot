<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cf.dao.KubeContainerMapper" >
  <resultMap id="BaseResultMap" type="com.cf.entity.KubeContainer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="image_pull_policy" property="imagePullPolicy" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="ports_container_port" property="portsContainerPort" jdbcType="VARCHAR" />
    <result column="ports_name" property="portsName" jdbcType="VARCHAR" />
    <result column="ports_protocol" property="portsProtocol" jdbcType="VARCHAR" />
    <result column="limits_cpu" property="limitsCpu" jdbcType="VARCHAR" />
    <result column="limits_memory" property="limitsMemory" jdbcType="VARCHAR" />
    <result column="requests_cpu" property="requestsCpu" jdbcType="VARCHAR" />
    <result column="requests_memory" property="requestsMemory" jdbcType="VARCHAR" />
    <result column="termination_message_path" property="terminationMessagePath" jdbcType="VARCHAR" />
    <result column="termination_message_policy" property="terminationMessagePolicy" jdbcType="VARCHAR" />
    <result column="volume_mounts_mount_path" property="volumeMountsMountPath" jdbcType="VARCHAR" />
    <result column="volume_mounts_name" property="volumeMountsName" jdbcType="VARCHAR" />
    <result column="volume_mounts_read_only" property="volumeMountsReadOnly" jdbcType="VARCHAR" />
    <result column="pId" property="pid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, image, image_pull_policy, name, ports_container_port, ports_name, ports_protocol, 
    limits_cpu, limits_memory, requests_cpu, requests_memory, termination_message_path, 
    termination_message_policy, volume_mounts_mount_path, volume_mounts_name, volume_mounts_read_only, 
    pId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from kube_container
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from kube_container
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.cf.entity.KubeContainer" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kube_container (image, image_pull_policy, name, 
      ports_container_port, ports_name, ports_protocol, 
      limits_cpu, limits_memory, requests_cpu, 
      requests_memory, termination_message_path, 
      termination_message_policy, volume_mounts_mount_path, 
      volume_mounts_name, volume_mounts_read_only, 
      pId)
    values (#{image,jdbcType=VARCHAR}, #{imagePullPolicy,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{portsContainerPort,jdbcType=VARCHAR}, #{portsName,jdbcType=VARCHAR}, #{portsProtocol,jdbcType=VARCHAR}, 
      #{limitsCpu,jdbcType=VARCHAR}, #{limitsMemory,jdbcType=VARCHAR}, #{requestsCpu,jdbcType=VARCHAR}, 
      #{requestsMemory,jdbcType=VARCHAR}, #{terminationMessagePath,jdbcType=VARCHAR}, 
      #{terminationMessagePolicy,jdbcType=VARCHAR}, #{volumeMountsMountPath,jdbcType=VARCHAR}, 
      #{volumeMountsName,jdbcType=VARCHAR}, #{volumeMountsReadOnly,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.cf.entity.KubeContainer" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kube_container
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="image != null" >
        image,
      </if>
      <if test="imagePullPolicy != null" >
        image_pull_policy,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="portsContainerPort != null" >
        ports_container_port,
      </if>
      <if test="portsName != null" >
        ports_name,
      </if>
      <if test="portsProtocol != null" >
        ports_protocol,
      </if>
      <if test="limitsCpu != null" >
        limits_cpu,
      </if>
      <if test="limitsMemory != null" >
        limits_memory,
      </if>
      <if test="requestsCpu != null" >
        requests_cpu,
      </if>
      <if test="requestsMemory != null" >
        requests_memory,
      </if>
      <if test="terminationMessagePath != null" >
        termination_message_path,
      </if>
      <if test="terminationMessagePolicy != null" >
        termination_message_policy,
      </if>
      <if test="volumeMountsMountPath != null" >
        volume_mounts_mount_path,
      </if>
      <if test="volumeMountsName != null" >
        volume_mounts_name,
      </if>
      <if test="volumeMountsReadOnly != null" >
        volume_mounts_read_only,
      </if>
      <if test="pid != null" >
        pId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="imagePullPolicy != null" >
        #{imagePullPolicy,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="portsContainerPort != null" >
        #{portsContainerPort,jdbcType=VARCHAR},
      </if>
      <if test="portsName != null" >
        #{portsName,jdbcType=VARCHAR},
      </if>
      <if test="portsProtocol != null" >
        #{portsProtocol,jdbcType=VARCHAR},
      </if>
      <if test="limitsCpu != null" >
        #{limitsCpu,jdbcType=VARCHAR},
      </if>
      <if test="limitsMemory != null" >
        #{limitsMemory,jdbcType=VARCHAR},
      </if>
      <if test="requestsCpu != null" >
        #{requestsCpu,jdbcType=VARCHAR},
      </if>
      <if test="requestsMemory != null" >
        #{requestsMemory,jdbcType=VARCHAR},
      </if>
      <if test="terminationMessagePath != null" >
        #{terminationMessagePath,jdbcType=VARCHAR},
      </if>
      <if test="terminationMessagePolicy != null" >
        #{terminationMessagePolicy,jdbcType=VARCHAR},
      </if>
      <if test="volumeMountsMountPath != null" >
        #{volumeMountsMountPath,jdbcType=VARCHAR},
      </if>
      <if test="volumeMountsName != null" >
        #{volumeMountsName,jdbcType=VARCHAR},
      </if>
      <if test="volumeMountsReadOnly != null" >
        #{volumeMountsReadOnly,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cf.entity.KubeContainer" >
    update kube_container
    <set >
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="imagePullPolicy != null" >
        image_pull_policy = #{imagePullPolicy,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="portsContainerPort != null" >
        ports_container_port = #{portsContainerPort,jdbcType=VARCHAR},
      </if>
      <if test="portsName != null" >
        ports_name = #{portsName,jdbcType=VARCHAR},
      </if>
      <if test="portsProtocol != null" >
        ports_protocol = #{portsProtocol,jdbcType=VARCHAR},
      </if>
      <if test="limitsCpu != null" >
        limits_cpu = #{limitsCpu,jdbcType=VARCHAR},
      </if>
      <if test="limitsMemory != null" >
        limits_memory = #{limitsMemory,jdbcType=VARCHAR},
      </if>
      <if test="requestsCpu != null" >
        requests_cpu = #{requestsCpu,jdbcType=VARCHAR},
      </if>
      <if test="requestsMemory != null" >
        requests_memory = #{requestsMemory,jdbcType=VARCHAR},
      </if>
      <if test="terminationMessagePath != null" >
        termination_message_path = #{terminationMessagePath,jdbcType=VARCHAR},
      </if>
      <if test="terminationMessagePolicy != null" >
        termination_message_policy = #{terminationMessagePolicy,jdbcType=VARCHAR},
      </if>
      <if test="volumeMountsMountPath != null" >
        volume_mounts_mount_path = #{volumeMountsMountPath,jdbcType=VARCHAR},
      </if>
      <if test="volumeMountsName != null" >
        volume_mounts_name = #{volumeMountsName,jdbcType=VARCHAR},
      </if>
      <if test="volumeMountsReadOnly != null" >
        volume_mounts_read_only = #{volumeMountsReadOnly,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pId = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cf.entity.KubeContainer" >
    update kube_container
    set image = #{image,jdbcType=VARCHAR},
      image_pull_policy = #{imagePullPolicy,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      ports_container_port = #{portsContainerPort,jdbcType=VARCHAR},
      ports_name = #{portsName,jdbcType=VARCHAR},
      ports_protocol = #{portsProtocol,jdbcType=VARCHAR},
      limits_cpu = #{limitsCpu,jdbcType=VARCHAR},
      limits_memory = #{limitsMemory,jdbcType=VARCHAR},
      requests_cpu = #{requestsCpu,jdbcType=VARCHAR},
      requests_memory = #{requestsMemory,jdbcType=VARCHAR},
      termination_message_path = #{terminationMessagePath,jdbcType=VARCHAR},
      termination_message_policy = #{terminationMessagePolicy,jdbcType=VARCHAR},
      volume_mounts_mount_path = #{volumeMountsMountPath,jdbcType=VARCHAR},
      volume_mounts_name = #{volumeMountsName,jdbcType=VARCHAR},
      volume_mounts_read_only = #{volumeMountsReadOnly,jdbcType=VARCHAR},
      pId = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>